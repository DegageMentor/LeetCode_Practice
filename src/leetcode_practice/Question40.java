package leetcode_practice;
import java.util.*;
/*
 * 40. 组合总和 II
给定一个数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。

candidates 中的每个数字在每个组合中只能使用一次。

说明：

所有数字（包括目标数）都是正整数。
解集不能包含重复的组合。 
示例 1:

输入: candidates = [10,1,2,7,6,1,5], target = 8,
所求解集为:
[
  [1, 7],
  [1, 2, 5],
  [2, 6],
  [1, 1, 6]
]
示例 2:

输入: candidates = [2,5,2,1,2], target = 5,
所求解集为:
[
  [1,2,2],
  [5]
]
 */
public class Question40 {
	List<List<Integer>> ans = new ArrayList<>();
    List<Integer> temp = new ArrayList<>();

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        Arrays.sort(candidates);
        dfs(candidates, target, 0, 0);
        return ans;

    }

    public void dfs(int[] candidates, int target, int index, int sum)
    {
        if(sum == target)
        {
            ans.add(new ArrayList<>(temp));
            return;
        }

        for(int i = index; i < candidates.length; i++)
        {
            int t = sum + candidates[i];
            if(t <= target)
            {
                temp.add(candidates[i]);
                dfs(candidates, target, i + 1, t);  //元素不能重复选择
        temp.remove(temp.size() - 1);
    }
    else break;

    while(i + 1 < candidates.length && candidates[i + 1] == candidates[i]) i++;//去除重复组合
    }
}
}
